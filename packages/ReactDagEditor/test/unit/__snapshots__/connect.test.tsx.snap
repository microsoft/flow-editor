// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test Connecting should add edge 1`] = `undefined`;

exports[`test Connecting should add edge: events 1`] = `
Array [
  "[Canvas]ViewportResize",
  "[Canvas]VirtualizationRecalculated",
  "[Canvas]ViewportResize",
  "[Edge]ConnectStart",
  "[Port]PointerEnter",
  "[Edge]ConnectEnd",
]
`;

exports[`test Connecting should attach nearest port by mouse, should not add edge after mouse leave: events 1`] = `
Array [
  "[Canvas]ViewportResize",
  "[Canvas]VirtualizationRecalculated",
  "[Canvas]ViewportResize",
  "[Edge]ConnectStart",
  "[Node]PointerEnter",
  "[Node]PointerLeave",
  "[Edge]ConnectEnd",
]
`;

exports[`test Connecting should attach to port 1`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: #0078D4; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: #0078D4; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M190,150C190,135,190,170,190,155"
    style="stroke: none; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port 2`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: none; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: none; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M290,250C290,202.5,190,202.5,190,155"
    style="stroke: #0078D4; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port 3`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: #0078D4; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: #0078D4; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M190,150C190,135,190,170,190,155"
    style="stroke: none; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port when mouse enter a connectable port, should not add edge after mouse leave 1`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: #0078D4; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: #0078D4; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M190,150C190,135,190,170,190,155"
    style="stroke: none; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port when mouse enter a connectable port, should not add edge after mouse leave 2`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: #0078D4; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: #0078D4; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M190,150C190,135,190,170,190,155"
    style="stroke: none; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port when mouse enter a connectable port, should not add edge after mouse leave 3`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: #0078D4; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: #0078D4; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M190,150C190,135,190,170,190,155"
    style="stroke: none; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port when mouse enter a connectable port, should not add edge after mouse leave 4`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: none; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: none; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M290,250C290,202.5,190,202.5,190,155"
    style="stroke: #0078D4; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port when mouse enter a connectable port, should not add edge after mouse leave 5`] = `
<g>
  <defs>
    <marker
      id="markerArrow"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="6"
      refY="5"
    >
      <path
        d="M0,0 L6,5 L0,10"
        style="stroke: #0078D4; fill: none;"
      />
    </marker>
  </defs>
  <line
    marker-end="url(#markerArrow)"
    style="stroke: #0078D4; fill: none; stroke-dasharray: 4,4;"
    x1="190"
    x2="190"
    y1="150"
    y2="151"
  />
  <path
    d="M190,150C190,135,190,170,190,155"
    style="stroke: none; fill: none;"
  />
</g>
`;

exports[`test Connecting should attach to port when mouse enter a connectable port, should not add edge after mouse leave: events 1`] = `
Array [
  "[Canvas]ViewportResize",
  "[Canvas]VirtualizationRecalculated",
  "[Canvas]ViewportResize",
  "[Edge]ConnectStart",
  "[Port]PointerEnter",
  "[Port]PointerLeave",
  "[Port]PointerEnter",
  "[Port]PointerLeave",
  "[Edge]ConnectEnd",
]
`;

exports[`test Connecting should attach to port: events 1`] = `
Array [
  "[Canvas]ViewportResize",
  "[Canvas]VirtualizationRecalculated",
  "[Canvas]ViewportResize",
  "[Edge]ConnectStart",
  "[Port]PointerEnter",
  "[Port]PointerLeave",
]
`;

exports[`test Connecting should not connect: events 1`] = `
Array [
  "[Canvas]ViewportResize",
  "[Canvas]VirtualizationRecalculated",
  "[Canvas]ViewportResize",
  "[Edge]ConnectStart",
  "[Edge]ConnectEnd",
]
`;

exports[`test Connecting should render invisible lines 1`] = `undefined`;

exports[`test Connecting should render invisible lines: events 1`] = `
Array [
  "[Canvas]ViewportResize",
  "[Canvas]VirtualizationRecalculated",
  "[Canvas]ViewportResize",
]
`;

exports[`test getNearestConnectablePort should return connectable port: events 1`] = `Array []`;

exports[`test getNearestConnectablePort should return nothing with no ports: events 1`] = `Array []`;
